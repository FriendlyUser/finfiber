steps:
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: bash
    id: govars
    args:
    - '-c'
    - |
      sed -i 's#%DISCORD_WEBHOOK%#'${_DISCORD_WEBHOOK}'#g' goapp.yaml
      sed -i 's/%MJ_APIKEY_PUBLIC%/'${_MJ_APIKEY_PUBLIC}'/g' goapp.yaml
      sed -i 's/%MJ_APIKEY_PRIVATE%/'${_MJ_APIKEY_PRIVATE}'/g' goapp.yaml
      sed -i 's/%TWITTER_BEARER_TOKEN%/'${TWITTER_BEARER_TOKEN}'/g' goapp.yaml
      ls
  - name: "gcr.io/cloud-builders/gcloud"
    id: deploy_go
    args: ["app", "deploy", "goapp.yaml"]
    timeout: "600s"
  
  - name: "gcr.io/cloud-builders/gcloud"
    id: deploy_python
    args: ["app", "deploy", "dashapp.yaml"]
    timeout: "600s"

  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: bash
    id: cleanup1
    args:
      - '-c'
      - |
        now=$(date)
        chmod +x gcrgc.sh
        ./gcrgc.sh gcr.io/stocks-272500/app-engine-tmp/app/ttl-2h $now
        ./gcrgc.sh us.gcr.io/stocks-272500/app-engine-tmp/app/ttl-2h $now
        ./gcrgc.sh gcr.io/stocks-272500/app-engine-tmp/app $now
    waitFor:
      - deploy_go
      - deploy_python

  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: bash
    id: cleanup2
    args:
      - '-c'
      - |
        now=$(date)
        chmod +x gcrgc.sh
        ./gcrgc.sh gcr.io/stocks-272500/app-engine-tmp/build-cache/ttl-7d/python-cache $now
        ./gcrgc.sh us.gcr.io/stocks-272500/app-engine-tmp/build-cache/ttl-7d/python-cache $now
    waitFor:
      - deploy_go
      - deploy_python